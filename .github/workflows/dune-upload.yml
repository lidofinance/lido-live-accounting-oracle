name: Upload Lido Report to Dune Analytics

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  workflow_dispatch:  # Allows manual triggering
  push:
    branches:
      - main

jobs:
  generate-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Node Dependencies
        run: npm install

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dune-analytics-client python-dotenv pandas requests

      - name: Create .env file
        run: |
          echo "RPC_URL=${{ secrets.RPC_URL }}" >> .env
          echo "HASH_CONSENSUS_ADDRESS=${{ vars.HASH_CONSENSUS_ADDRESS }}" >> .env
          echo "LIDO_ADDRESS=${{ vars.LIDO_ADDRESS }}" >> .env
          echo "ACCOUNTING_ORACLE_ADDRESS=${{ vars.ACCOUNTING_ORACLE_ADDRESS }}" >> .env
          echo "WITHDRAWAL_VAULT_ADDRESS=${{ vars.WITHDRAWAL_VAULT_ADDRESS }}" >> .env
          echo "EL_REWARDS_VAULT_ADDRESS=${{ vars.EL_REWARDS_VAULT_ADDRESS }}" >> .env
          echo "BURNER_ADDRESS=${{ vars.BURNER_ADDRESS }}" >> .env
          echo "DUNE_API_KEY=${{ secrets.DUNE_API_KEY }}" >> .env

      - name: Generate Lido Report
        run: npm run report

      - name: Upload to Dune Analytics
        run: python scripts/upload_to_dune.py 